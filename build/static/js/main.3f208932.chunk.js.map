{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","console","log","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","arr","item","props","onCharSelected","renderItems","dasabled","Skeleton","CharInfo","charId","prevProps","skeleton","i","ErrorBoundary","err","errInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f208932.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n\t_apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\t_apiKey = \"apikey=6c282e6cf5dfd2d1134a05632ba2815b\";\r\n\t_baseOffset = 210;\r\n\r\n\tgetResource = async (url) => {\r\n\t\tlet res = await fetch(url);\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tthrow new Error(`Failed to fetch ${url}, status: ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn await res.json();\r\n\t};\r\n\r\n\tgetAllCharacters = async (offset = this._baseOffset) => {\r\n\t\tconst res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n\t\treturn res.data.results.map(this._transformCharacter)\r\n\t};\r\n\r\n\tgetCharacter = async (id) => {\r\n\t\tconst res = await this.getResource(\r\n\t\t\t`${this._apiBase}characters/${id}?${this._apiKey}`\r\n\t\t);\r\n\t\treturn this._transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\t_transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" +\tchar.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default MarvelService;\r\n","import './spinner.css';\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className=\"loadingio-spinner-double-ring-cyt5ujsykuq\"><div className=\"ldio-9b99dt7h9r\">\r\n\t\t<div></div><div></div><div><div></div></div><div><div></div></div></div></div>\r\n\t)\r\n}\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\t// обращаемся к статичному файлу src={process.env.PUBLIC_URL+'/error.jpeg'}\r\n\treturn (\r\n\t\t<img style={{display: 'block', width: '450px', height: '450px', objectFit: 'contain', margin: '0 auto'}}\r\n\t\t\tsrc={img} alt=\"Error\" />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from \"react\";\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\n\nclass RandomChar extends Component {\n\tstate = {\n\t\tchar: {},\n\t\tloading: true,\n\t\terror: false\n\t};\n\n\tmarvelService = new MarvelService();\n\n\tcomponentDidMount() { /* любые обновления или запросы к АПИ сервера мы должны делать в componentDidMount */\n\t\tthis.updateChar()\n\t\t// this.timerId = setInterval(this.updateChar, 3000)\n\t\tconsole.log(\"mount\")\n\t\t// errorBoundary\n\t\t// this.foo.bar = 0\n\t}\n\n\tcomponentWillUnmount() { /* всегда нужно выполнять отписку от повторяющихся действий */\n\t\tclearInterval(this.timerId)\n\t\tconsole.log(\"unmount\")\n\t}\n\n\tonCharLoaded = (char) => {\n\t\tconsole.log(\"update\")\n\t\tthis.setState({\n\t\t\tchar,\n\t\t\tloading: false\n\t\t})\n\t}\n\n\tonCharLoading = () => {\n\t\tthis.setState({\n\t\t\t\tloading: true\n\t\t})\n}\n\n\tonError = () => {\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\terror: true\n\t\t})\n\t}\n\n\tupdateChar = () => {\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011100);\n\t\tthis.onCharLoading();\n\t\tthis.marvelService\n\t\t\t.getCharacter(id)\n\t\t\t.then(this.onCharLoaded)\n\t\t\t.catch(this.onError);\n\t\t// .then(res => this.setState(res));\n\t};\n\n\t// marvelService.getAllCharacters().then(res => res.data.results.forEach(item => console.log(item.name)));\n\n\trender() {\n\t\tconsole.log(\"render\")\n\t\tconst {char, loading, error} = this.state;\n\t\tconst errorMessage = error ? <ErrorMessage/> : null;\n\t\tconst spinner = loading ? <Spinner/> : null;\n\t\tconst content = !(loading || error) ? <View char={char}/> : null\n\n\t\treturn (\n\t\t\t<div className=\"randomchar\">\n\t\t\t\t{errorMessage}\n\t\t\t\t{spinner}\n\t\t\t\t{content}\n\t\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\t\tRandom character for today!\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t\t<button className=\"button button__main\"\n\t\t\t\t\tonClick={this.updateChar}>\n\t\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t\t</button>\n\t\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst View = ({ char }) => {\n\tconst {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar;\n","import { Component } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\nimport PropTypes from \"prop-types\";\n\n\nclass CharList extends Component {\n\tstate = {\n\t\tcharList: [],\n\t\tloading: true,\n\t\terror: false,\n\t\tnewItemLoading: false,\n\t\toffset: 1541,\n\t\tcharEnded: false\n\t};\n\n\tmarvelService = new MarvelService();\n\n\tcomponentDidMount() {\n\t\tthis.onRequest();\n\t\t// errorBoundary\n\t\t\t// this.foo.bar = 0\n\t}\n\n\tonRequest = (offset) => {\n\t\tthis.onCharListLoading();\n\t\tthis.marvelService.getAllCharacters(offset)\n\t\t.then(this.onCharListLoaded)\n\t\t.catch(this.onError);\n\t}\n\n\tonCharListLoading = () => {\n\t\tthis.setState({\n\t\t\tnewItemLoading: true\n\t\t});\n\t}\n\n\tonCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tthis.setState(({offset, charList}) => ({\n\t\t\tcharList: [...charList, ...newCharList],\n\t\t\tloading: false,\n\t\t\tnewItemLoading: false,\n\t\t\toffset: offset + 9,\n\t\t\tcharEnded: ended\n\t\t}));\n\t};\n\n\tonError = () => {\n\t\tthis.setState({\n\t\t\terror: true,\n\t\t\tloading: false,\n\t\t});\n\t};\n\n\t// Этот метод создан для оптимизации,\n\t// чтобы не помещать такую конструкцию в метод render\n\trenderItems(arr) {\n\t\tconst items = arr.map((item) => {\n\t\t\tlet imgStyle = { 'objectFit': \"cover\" };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t\t\t) {\n\t\t\t\timgStyle = { 'objectFit' : \"unset\" };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li className=\"char__item\"\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => this.props.onCharSelected(item.id)}>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\n\t\treturn <ul className=\"char__grid\">{items}</ul>;\n\t}\n\n\trender() {\n\t\tconst { charList, loading, error, newItemLoading, offset, charEnded} = this.state;\n\n\t\tconst items = this.renderItems(charList);\n\n\t\tconst errorMessage = error ? <ErrorMessage /> : null;\n\t\tconst spinner = loading ? <Spinner /> : null;\n\t\tconst content = !(loading || error) ? items : null;\n\n\t\treturn (\n\t\t\t<div className=\"char__list\">\n\t\t\t\t{errorMessage}\n\t\t\t\t{spinner}\n\t\t\t\t{content}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\t\tdasabled={newItemLoading}\n\t\t\t\t\tstyle={{'display': charEnded ? 'none' : 'block'}}\n\t\t\t\t\tonClick={() => this.onRequest(offset)}\n\t\t\t\t\t>\n\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nCharList.propTypes = {\n\t// charId: PropTypes.string // будет оповещение в консоли что не соответствуют пропсы поможет заметить изменение данных\n\tonCharSelected: PropTypes.func.isRequired\n\t// charId: PropTypes.number.isRequired // обязательный пропс, и если его нет то предупреждение в случае его отсутствия\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from \"react\";\nimport \"./charInfo.scss\";\nimport MarvelService from \"../../services/MarvelService\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nclass CharInfo extends Component {\n\tstate = {\n\t\tchar: null,\n\t\tloading: false,\n\t\terror: false\n\t};\n\n\tmarvelService = new MarvelService();\n\n\tcomponentDidMount() {\n\t\tthis.updateChar()\n\t}\n\n\tcomponentDidUpdate(prevProps/* , prevState */) {\n\t\tif (this.props.charId !== prevProps.charId) { /* очень частая ошибка новичков - не проверка на предыдущие пропсы */\n\t\t\tthis.updateChar();\n\t\t}\n\t}\n// // предохранители это классовые компоненты которые оборачивают дргуие компоненты и если в их дочерних компонентах будет ошибка то предорхранители будут ее ловить\n// \tcomponentDidCatch(err, info) {\n// \t\tconsole.error(err, info);\n// \t\tthis.setState({error: true});\n// \t}\n\n\n\tupdateChar = () => {\n\t\tconst {charId} = this.props;\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\t\tthis.onCharLoading();\n\t\tthis.marvelService\n\t\t\t.getCharacter(charId)\n\t\t\t.then(this.onCharLoaded)\n\t\t\t.catch(this.onError);\n\t\t// errorBoundary\n\t\t// this.foo.bar = 0\n\t}\n\n\tonCharLoaded = (char) => {\n\t\tthis.setState({\n\t\t\tchar,\n\t\t\tloading: false\n\t\t})\n\t}\n\n\tonCharLoading = () => {\n\t\tthis.setState({\n\t\t\t\tloading: true\n\t\t})\n}\n\n\tonError = () => {\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\terror: true\n\t\t})\n\t}\n\n\trender() {\n\t\tconst {char, loading, error} = this.state;\n\t\tconst skeleton = char || loading || error ? null : <Skeleton/>;\n\t\tconst errorMessage = error ? <ErrorMessage/> : null;\n\t\tconst spinner = loading ? <Spinner/> : null;\n\t\tconst content = !(loading || error || !char) ? <View char={char}/> : null\n\t\treturn (\n\t\t\t<div className=\"char__info\">\n\t\t\t\t{skeleton}\n\t\t\t\t{errorMessage}\n\t\t\t\t{spinner}\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki, comics} = char;\n\tlet imgStyle = {'objectFit' : 'cover'};\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t  imgStyle = {'objectFit' : 'contain'};\n  }\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"char__descr\">\n\t\t\t\t\t{description}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t\t{\n\t\t\t\t\t\tcomics.map((item, i) => {\n\t\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\t\tif (i > 9) return;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\t// charId: PropTypes.string // будет оповещение в консоли что не соответствуют пропсы поможет заметить изменение данных\n\tcharId: PropTypes.number\n\t// charId: PropTypes.number.isRequired // обязательный пропс, и если его нет то предупреждение в случае его отсутствия\n}\n\nexport default CharInfo;\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n// ловят ошибки при 1. render, 2. методах жизненного цикла и в          3. конструктарах дочерних компонентов\r\n// не ловят ошибки 1. внутри обработчиков событий так как событие происходит не внутри render, 2. внутри ассинхронного кода, 3. в самом предохранителе, он ловит ошибки внутри дочерних компонентов но не внутри себя и 4. Серверный рендеринг\r\n\tcomponentDidCatch(err, errInfo) {\r\n\t\tconsole.log(err, errInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\n\nimport decoration from \"../../resources/img/vision.png\";\n\nclass  App extends Component {\n\tstate = {\n\t\tselectedChar: null\n\t}\n\n\tonCharSelected = (id) => {\n\t\tthis.setState({\n\t\t\tselectedChar: id\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<AppHeader />\n\t\t\t\t<main>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<RandomChar/>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t<div className=\"char__content\">\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CharList onCharSelected={this.onCharSelected}/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t\t{/* приходит в CharList и уходит в CharInfo */}\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CharInfo charId={this.state.selectedChar}/>\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</div>\n\t\t\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}